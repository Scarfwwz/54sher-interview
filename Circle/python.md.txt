# python入门学习

## 一、常用Linux命令的基本使用

| 序号 | 命令           | 对应英文             | 作用                                     |
| ---- | -------------- | -------------------- | ---------------------------------------- |
| 01   | ls             | list                 | 查看当前所在文件夹下的内容               |
| 02   | pwd            | print work directory | 查看当前所在文件夹                       |
| 03   | cd[目录名]     | change directory     | 切换文件夹                               |
| 04   | touch[文件名]  | touch                | 如果文件夹不在，新建文件                 |
|      |                |                      | 如果文件存在，可以修改文件的末次修改日期 |
| 05   | mkdir[目录名]  | make directory       | 创建目录                                 |
|      | mkdir -p a/b/c |                      | 可以递归创建目录                         |
| 06   | rm[文件名]     | remove               | 删除指定的文件名                         |
|      | rm -r          |                      | 删除指定目录                             |
|      | rm -f          |                      | 强制删除，忽略不存在的文件，无需提示     |
| 07   | clear          | clear                | 清屏                                     |
| 08   | print(x)       |                      | 将x输出到控制台                          |
|      | type(x)        |                      | 查看x的变量类型                          |
| 09   | int(x)         |                      | 将 x 转换为一个整数                      |
|      | float(x)       |                      | 将 x 转换到一个浮点数                    |
| 10   | import         |                      | 可以导入一个 “工具包”                    |
|      | random         |                      | 导入随机数                               |
| 11   | if             |                      | if从句                                   |
|      | elif           |                      | 补充if从句                               |
|      | else           |                      | 否则                                     |
| 12   |                |                      |                                          |
|      |                |                      |                                          |

> 小技巧
>
> - ctrl+shift+=放大终端窗口的字体显示
> - ctrl+-缩小终端窗口的字体显示

## 二、Linux终端命令格式

### 1、终端命令格式

```java
command [-options] [parameter]
//[-options]：选项，可用来对命令进行控制，也可以省略
//[parameter]:传给命令的参数，可以是零个、一个或者多个
//[  ]:表示可要可不要
```

### 2、查阅命令帮助信息（知道）

> 提示
>
> - 知道即可，先学习常用命令及常用选项即可

```java 
（1） command --help
//显示command命令的帮助信息
（2） man command     --man是manual的缩写
//查阅command命令的使用手册
```

> - **使用man时的操作键：**

| 操作键  | 功能                   |
| ------- | ---------------------- |
| 空格键  | 显示手册页的下一屏     |
| Enter键 | 一次滚动手册页的下一行 |
| b       | 回滚一屏               |
| f       | 前滚一屏               |
| q       | 退出                   |

## 三、文件和目录常用命令

### 1、查看目录内容

#### (1) 中端实用技巧：

1>自动补全

- 在敲出**文件/目录/命令**的前几个字母之后，按下**tab**键
- 如果还存在其他的**文件/目录/命令**，再按一下**tab**键，系统会提示可能存在的命令

2>曾经使用过的命令

- 按**上/下**光标键可以在曾经使用过的命令之间来回切换
- 如果想要退出选择，并且不想执行当前选项中的命令，可以按**ctrl+c**

#### (2)命令说明：

- 以**.**开头的文件为隐藏文件，需要用-a参数才能显示
- **.**代表当前目录
- **..**代表上一级目录

#### (3)ls常用选项：

| 参数 | 含义                                             |
| ---- | ------------------------------------------------ |
| -a   | 显示指定目录下所有子目录与文件，包括**隐藏文件** |
| -l   | 以列表方式显示文件的详细信息                     |
| -h   | 配合-l以人性化的方式显示文件大小                 |

##### 计算机中文件大小的表示方式(科普)

| 单位 | 英文 | 含义                                          |
| ---- | ---- | --------------------------------------------- |
| 字节 | B    | 在计算机中作为一个数字单元，一般为8位二进制数 |
| 千   | K    | 1KB-10248，千字节(1024=2**10)                 |
| 兆   | M    | 1MB=1024 KB，百万字节                         |
| 千兆 | G    | 1GB-1024MB，十亿字节，千兆字节                |
| 太   | T    | 1TB-1024GB，万亿字节，太字节                  |
| 拍   | P    | 1PB-1024 T8.千万亿字节，拍字节                |
| 艾   | E    | 1 EB-1024 PB，百亿亿字节，艾字节              |
| 泽   | Z    | 1 ZB-1024 EB.十万亿亿字节，泽字节             |
| 尧   | Y    | 1YB-1024Z8，一亿亿亿字节，尧字节              |

#### (4)通配符的使用：

| 通配符 | 含义                  |
| ------ | --------------------- |
| *      | 代表任意个字符        |
| ？     | 代表一个字符          |
| [abc]  | 匹配a、b、c中任意一个 |
| [a-f]  | 匹配a-f中的任意一个   |

### 2、切换目录（cd）

| 命令  | 含义                                   |
| ----- | -------------------------------------- |
| cd    | 切换到当前用户的主目录(/home/用户目录) |
| cd ~  | 切换到当前用户的主目录(/home/用户目录) |
| cd .  | 保持在当前目录不变                     |
| cd .. | 切换到上级目录                         |
| cd -  | 可以在最近两次工作目录之间来回切换     |

### 3、拷贝和移动文件

| 序号 | 命令    | 对应英文 | 作用                            |
| ---- | ------- | -------- | ------------------------------- |
| 01   | tree    | tree     | 以树状图列出文件目录结构        |
|      | tree -d |          | 只显示目录，不再显示文件        |
| 02   | cp      | copy     | 复制文件或目录                  |
| 03   | mv      | move     | 移动文件或目录/文件或目录重命名 |

## 四、基本语句

### 1、变量

* `str` —— 字符串
* `bool` —— 布尔（真假）
* `int` —— 整数
* `float` —— 浮点数（小数）
* 在 Python 中可以使用 `input` 函数从键盘等待用户的输入

```java
字符串变量 = input("提示信息：")
```



| 格式化字符 | 含义                                                         |
| ---------- | ------------------------------------------------------------ |
| %s         | 字符串                                                       |
| %d         | 有符号十进制整数，`%06d` 表示输出的整数显示位数，不足的地方使用 `0` 补全 |
| %f         | 浮点数，`%.2f` 表示小数点后只显示两位                        |
| %%         | 输出 `%`                                                     |

```
print("我的名字叫 %s，请多多关照！" % name)
print("我的学号是 %06d" % student_no)
print("苹果单价 %.02f 元／斤，购买 %.02f 斤，需要支付 %.02f 元" % (price, weight, money))
print("数据比例是 %.02f%%" % (scale * 100))
```

### 2、运算符

#### (1)算数运算符

| 运算符 |  描述  | 实例                                       |
| :----: | :----: | ------------------------------------------ |
|   +    |   加   | 10 + 20 = 30                               |
|   -    |   减   | 10 - 20 = -10                              |
|   *    |   乘   | 10 * 20 = 200                              |
|   /    |   除   | 10 / 20 = 0.5                              |
|   //   | 取整除 | 返回除法的整数部分（商） 9 // 2 输出结果 4 |
|   %    | 取余数 | 返回除法的余数 9 % 2 = 1                   |
|   **   |   幂   | 又称次方、乘方，2 ** 3 = 8                 |

#### (2)关系运算符

| 运算符 | 描述                                                         |
| ------ | ------------------------------------------------------------ |
| ==     | 检查两个操作数的值是否 **相等**，如果是，则条件成立，返回 True |
| !=     | 检查两个操作数的值是否 **不相等**，如果是，则条件成立，返回 True |
| >      | 检查左操作数的值是否 **大于** 右操作数的值，如果是，则条件成立，返回 True |
| <      | 检查左操作数的值是否 **小于** 右操作数的值，如果是，则条件成立，返回 True |
| >=     | 检查左操作数的值是否 **大于或等于** 右操作数的值，如果是，则条件成立，返回 True |
| <=     | 检查左操作数的值是否 **小于或等于** 右操作数的值，如果是，则条件成立，返回 True |

#### (3)逻辑运算符

| 运算符 | 逻辑表达式 | 描述                                                         |
| ------ | ---------- | ------------------------------------------------------------ |
| and    | x and y    | 只有 x 和 y 的值都为 True，才会返回 True<br />否则只要 x 或者 y 有一个值为 False，就返回 False |
| or     | x or y     | 只要 x 或者 y 有一个值为 True，就返回 True<br />只有 x 和 y 的值都为 False，才会返回 False |
| not    | not x      | 如果 x 为 True，返回 False<br />如果 x 为 False，返回 True   |

#### (4)赋值运算符

| 运算符 | 描述                       | 实例                                  |
| ------ | -------------------------- | ------------------------------------- |
| =      | 简单的赋值运算符           | c = a + b 将 a + b 的运算结果赋值为 c |
| +=     | 加法赋值运算符             | c += a 等效于 c = c + a               |
| -=     | 减法赋值运算符             | c -= a 等效于 c = c - a               |
| *=     | 乘法赋值运算符             | c *= a 等效于 c = c * a               |
| /=     | 除法赋值运算符             | c /= a 等效于 c = c / a               |
| //=    | 取整除赋值运算符           | c //= a 等效于 c = c // a             |
| %=     | 取 **模** (余数)赋值运算符 | c %= a 等效于 c = c % a               |
| **=    | 幂赋值运算符               | c **= a 等效于 c = c ** a             |

#### (5)运算符的优先级

* 以下表格的算数优先级由高到最低顺序排列

| 运算符                   | 描述                   |
| ------------------------ | ---------------------- |
| **                       | 幂 (最高优先级)        |
| * / % //                 | 乘、除、取余数、取整除 |
| + -                      | 加法、减法             |
| <= < > >=                | 比较运算符             |
| == !=                    | 等于运算符             |
| = %= /= //= -= += *= **= | 赋值运算符             |
| not or and               | 逻辑运算符             |

### 3、循环

#### (1)break与continue

> `break` 和 `continue` 是专门在循环中使用的关键字

* `break` *某一条件满足时*，，**退出循环**，不再执行后续重复的代码
* `continue` *某一条件满足时*，不执行后续重复的代码

> `break` 和 `continue` 只针对 **当前所在循环** 有效



#### (2)转义字符**字符串中的转义字符**

* `\t` 在控制台输出一个 **制表符**，协助在输出文本时 **垂直方向** 保持对齐
* `\n` 在控制台输出一个 **换行符**

> **制表符** 的功能是在不使用表格的情况下在 **垂直方向** 按列对齐文本

| 转义字符 | 描述       |
| -------- | ---------- |
| \\\\     | 反斜杠符号 |
| \\'      | 单引号     |
| \\"      | 双引号     |
| \n       | 换行       |
| \t       | 横向制表符 |
| \r       | 回车       |

